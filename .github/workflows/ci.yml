name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: vetqueue
          POSTGRES_PASSWORD: vetqueue
          POSTGRES_DB: vetqueue
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            packages/backend/package-lock.json
            package-lock.json

      - name: Install dependencies
        working-directory: packages/backend
        run: npm ci

      - name: Generate Prisma Client
        working-directory: packages/backend
        run: npm run generate
        env:
          DATABASE_URL: postgresql://vetqueue:vetqueue@localhost:5432/vetqueue?schema=public

      - name: Run migrations
        working-directory: packages/backend
        run: npm run migrate:deploy
        env:
          DATABASE_URL: postgresql://vetqueue:vetqueue@localhost:5432/vetqueue?schema=public

      - name: Build
        working-directory: packages/backend
        run: npm run build
        env:
          DATABASE_URL: postgresql://vetqueue:vetqueue@localhost:5432/vetqueue?schema=public

  frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            packages/frontend/package-lock.json
            package-lock.json

      - name: Install dependencies
        working-directory: packages/frontend
        run: npm ci

      - name: Build
        working-directory: packages/frontend
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: http://localhost:3001

