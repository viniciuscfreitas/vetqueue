services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: vetqueue
      POSTGRES_PASSWORD: vetqueue
      POSTGRES_DB: vetqueue
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vetqueue"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vetqueue_network

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://vetqueue:vetqueue@db:5432/vetqueue?schema=public
      PORT: 3001
      NODE_ENV: production
    ports:
      - "3002:3001"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        npm run generate &&
        npm run migrate:deploy &&
        npm run db:seed || true &&
        npm start
      "
    networks:
      - vetqueue_network
    restart: unless-stopped

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    networks:
      - vetqueue_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  vetqueue_network:
    driver: bridge
